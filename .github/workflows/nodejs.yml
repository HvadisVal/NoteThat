name: CI - NoteThat App

on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: ci
      MONGO_URI: ${{ secrets.MONGO_URI_TEST }}
      TEST_USER_TOKEN: ${{ secrets.TEST_USER_TOKEN }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    strategy:
      matrix:
        node-version: [18]

    steps:
      - name: ‚¨á Checkout repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ‚ôªÔ∏è Cache frontend node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: ./frontend
        run: CI=true npm test

      - name: ‚ôªÔ∏è Cache backend node_modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: üß™ Seed test user    
        working-directory: ./backend
        run: npx ts-node scripts/seedTestUser.ts
        env:
          MONGO_URI: ${{ secrets.MONGO_URI_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Run backend tests
        working-directory: ./backend
        run: CI=true npm test
        env: 
          NODE_ENV: ci
          MONGO_URI: ${{ secrets.MONGO_URI_TEST }}

      
      - name: üß© Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps
        

      - name: Run E2E tests
        working-directory: ./frontend
        run: |
          npx wait-on https://notethat-lw82.onrender.com
           sleep 30
           npm run e2e:test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      -  name:  Deploy Frontend to Render
         run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}

      -  name:  Deploy Backend to Render
         run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
